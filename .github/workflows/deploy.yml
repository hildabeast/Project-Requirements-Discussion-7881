name: Deploy to Hostinger

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # FIXED: Disable caching until we have a lock file
          # cache: 'npm'
      
      - name: Verify package.json exists
        run: |
          if [ ! -f "./package.json" ];then
            echo "Error: package.json not found in current directory"
            ls -la
            exit 1
          fi
          echo "✅ package.json found successfully"
      
      - name: Generate package-lock.json first
        run: |
          echo "📝 Generating package-lock.json..."
          npm install --package-lock-only
          echo "✅ package-lock.json generated successfully"
          ls -la
      
      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci || npm install  # Fallback to npm install if npm ci fails
          echo "✅ Dependencies installed successfully"
      
      # REMOVED: The git push steps that were causing issues
      # We'll simply build with the generated lock file without trying to commit it back
      
      - name: Build project (production)
        run: |
          echo "🔨 Building project for production..."
          export NODE_ENV=production
          npm run build
          echo "✅ Build completed successfully"
      
      - name: Verify build output and assets
        run: |
          echo "🔍 Verifying build output..."
          # Check if dist directory exists
          if [ ! -d "./dist" ];then
            echo "❌ Error: dist directory not found after build"
            ls -la
            exit 1
          fi
          
          # Check for index.html
          if [ ! -f "./dist/index.html" ];then
            echo "❌ Error: index.html not found in dist directory"
            ls -la ./dist
            exit 1
          fi
          
          # Check for vite.svg (favicon)
          if [ ! -f "./dist/vite.svg" ] && [ ! -f "./dist/favicon.svg" ];then
            echo "⚠️ Warning: Favicon not found in dist directory"
            ls -la ./dist
            # Don't fail the build for this
          fi
          
          # Check for CSS files
          CSS_FILES=$(find ./dist -name "*.css" | wc -l)
          if [ "$CSS_FILES" -eq 0 ];then
            echo "❌ Error: No CSS files found in dist directory"
            find ./dist -type f | sort
            exit 1
          fi
          
          # Check for JS files
          JS_FILES=$(find ./dist -name "*.js" | wc -l)
          if [ "$JS_FILES" -eq 0 ];then
            echo "❌ Error: No JS files found in dist directory"
            find ./dist -type f | sort
            exit 1
          fi
          
          echo "✅ Build output verified successfully:"
          echo "📁 Directory structure:"
          ls -la ./dist/
          echo ""
          echo "🎨 CSS files found:"
          find ./dist -name "*.css" | sort
          echo ""
          echo "⚡ JS files found:"
          find ./dist -name "*.js" | sort
          echo ""
          echo "🖼️ Asset files found:"
          find ./dist -name "*.svg" -o -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.ico" | sort
          echo ""
          
          # Display index.html content for debugging
          echo "📄 Contents of index.html:"
          echo "=========================="
          cat ./dist/index.html
          echo "=========================="
      
      - name: Deploy to deploy branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          publish_dir: ./dist
          publish_branch: deploy
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: '🚀 Deploy: ${{github.event.head_commit.message}}'
      
      - name: Deployment Summary
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "📊 Build Summary:"
          echo "- CSS files: $(find ./dist -name "*.css" | wc -l)"
          echo "- JS files: $(find ./dist -name "*.js" | wc -l)"
          echo "- Asset files: $(find ./dist/assets -type f 2>/dev/null | wc -l)"
          echo "- Total files: $(find ./dist -type f | wc -l)"
          echo ""
          echo "🌐 Your app should now be available on Hostinger!"
          echo "🔗 Make sure your Hostinger hosting points to the 'deploy' branch"